<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.xin.myblog.dao.BlogMapper">
    <sql id="selectFields">
        id, title, content, first_picture, description, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, tags_id
    </sql>
    <sql id="insertFields">
        title, content, first_picture, description, flag, views, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, tags_id
    </sql>

    <select id="selectBlogByPage" resultType="Blog">
        SELECT <include refid="selectFields"/>
        FROM t_blog
        ORDER BY create_time DESC
        limit #{offset}, #{limit}
    </select>

    <select id="selectBlogByPage_FuzzyName_Type_Recommend_Published" resultType="Blog">
        SELECT <include refid="selectFields"/>
        FROM t_blog
        <where>
            <if test="id != null">
                type_id = #{id}
            </if>
            <if test="name != null">
                AND title LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="recommend != null">
                AND recommend = #{recommend}
            </if>
            <if test="published != null">
                AND published = #{published}
            </if>
        </where>
        ORDER BY create_time DESC
        limit #{offset}, #{limit}
    </select>

    <select id="selectBlogById" resultType="Blog">
        SELECT <include refid="selectFields"/>
        FROM t_blog
        WHERE id = #{id}
    </select>

    <select id="selectBlogRows" resultType="Integer">
        SELECT COUNT(id)
        FROM t_blog
    </select>

    <select id="selectBlogRowsByFuzzyName_Type_Recommend_Published" resultType="Integer">
        SELECT COUNT(id)
        FROM t_blog
        <where>
            <if test="id != null">
                type_id = #{id}
            </if>
            <if test="name != null">
                AND title LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="recommend != null">
                AND recommend = #{recommend}
            </if>
            <if test="published != null">
                AND published = #{published}
            </if>
        </where>
    </select>

    <select id="selectBlogByName" resultType="Blog">
        SELECT <include refid="selectFields"/>
        FROM t_blog
        WHERE title = #{name}
        ORDER BY create_time DESC
    </select>

    <insert id="insertBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_blog(<include refid="insertFields"/>)
        VALUES(#{title}, #{content}, #{firstPicture}, #{description}, #{flag}, #{views}, #{appreciation}, #{shareStatement}, #{commentabled}, #{published}, #{recommend}, #{createTime}, #{updateTime}, #{typeId}, #{user.id}, #{tagsId})
    </insert>

    <update id="updateBlog" parameterType="Blog">
        UPDATE t_blog
        SET title = #{title},
            content = #{content},
            first_picture = #{firstPicture},
            description = #{description},
            flag = #{flag},
            appreciation = #{appreciation},
            share_statement = #{shareStatement},
            commentabled = #{commentabled},
            published = #{published},
            recommend = #{recommend},
            update_time = #{updateTime},
            type_id = #{typeId},
            tags_id = #{tagsId}
        WHERE id = #{id}
    </update>

    <update id="updateBlogViews" parameterType="Integer">
        UPDATE t_blog
        SET views = views + 1
        WHERE id = #{id}
    </update>

    <delete id="deleteBlog">
        DELETE
        FROM t_blog
        WHERE id = #{id}
    </delete>

    <select id="selectType" parameterType="Blog" resultType="Type">
        SELECT id, name
        FROM t_type
        WHERE id = #{typeId}
    </select>

    <select id="selectUser" parameterType="Blog" resultType="User">
        SELECT id, avatar, create_time, email, nickname, password, type, update_time, username
        FROM t_user
        WHERE id = #{userId}
    </select>

    <select id="selectBlogRecommendMostNear" resultType="Blog">
        SELECT <include refid="selectFields" />
        FROM t_blog
        WHERE recommend = true
        AND published = true
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectBlogPublishedByPage" resultType="Blog">
        SELECT <include refid="selectFields" />
        FROM t_blog
        WHERE published = true
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectBlogPublishedByPage_Tag" resultType="Blog">
        SELECT <include refid="selectFields" />
        FROM t_blog
        INNER JOIN t_tag_blog
        ON t_blog.id = t_tag_blog.blog_id
        WHERE tag_id = #{id}
        AND published = true
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

</mapper>